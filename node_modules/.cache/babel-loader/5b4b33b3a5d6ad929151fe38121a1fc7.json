{"ast":null,"code":"var _jsxFileName = \"/Users/sasakireiou/Desktop/react_practice/src/memo/FindForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, memo } from 'react';\nimport usePersist from '../Persist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FindForm(props) {\n  _s();\n\n  const [memo, setMemo] = usePersist(\"memo\", []);\n  const [fmemo, setFMemo] = usePersist(\"findMemo\", []);\n  const [message, setMessage] = useState('');\n  const [mode, setMode] = usePersist('mode', 'find');\n\n  const doChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const doAction = e => {\n    if (message == '') {\n      setMode('default');\n      return;\n    }\n\n    let res = memo.filter((item, key) => {\n      return item.message.includes(message);\n    });\n    setFMemo(res);\n    setMode('find');\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: doAction,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: doChange,\n        value: message,\n        className: \"form-control-sm col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Find\",\n        className: \"btn btn-primary btn-sm col-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FindForm, \"1j3KURkyt1KVPLGyrVBm9KAf0pY=\", false, function () {\n  return [usePersist, usePersist, usePersist];\n});\n\n_c = FindForm;\nexport default FindForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindForm\");","map":{"version":3,"sources":["/Users/sasakireiou/Desktop/react_practice/src/memo/FindForm.js"],"names":["React","useState","useEffect","memo","usePersist","FindForm","props","setMemo","fmemo","setFMemo","message","setMessage","mode","setMode","doChange","e","target","value","doAction","res","filter","item","key","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACtB,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBH,UAAU,CAAC,MAAD,EAAS,EAAT,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAAC,UAAD,EAAa,EAAb,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBT,UAAU,CAAC,MAAD,EAAS,MAAT,CAAlC;;AAEA,QAAMU,QAAQ,GAAIC,CAAD,IAAM;AACrBJ,IAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIH,CAAD,IAAO;AACtB,QAAIL,OAAO,IAAI,EAAf,EAAkB;AAChBG,MAAAA,OAAO,CAAC,SAAD,CAAP;AACA;AACD;;AACD,QAAIM,GAAG,GAAGhB,IAAI,CAACiB,MAAL,CAAY,CAACC,IAAD,EAAOC,GAAP,KAAc;AAClC,aAAOD,IAAI,CAACX,OAAL,CAAaa,QAAb,CAAsBb,OAAtB,CAAP;AACD,KAFS,CAAV;AAGAD,IAAAA,QAAQ,CAACU,GAAD,CAAR;AACAN,IAAAA,OAAO,CAAC,MAAD,CAAP;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAaA,sBACE;AAAM,IAAA,QAAQ,EAAEO,QAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEJ,QAA7B;AAAuC,QAAA,KAAK,EAAEJ,OAA9C;AACO,QAAA,SAAS,EAAC;AADjB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhCQL,Q;UACiBD,U,EACEA,U,EAEFA,U;;;KAJjBC,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\nfunction FindForm(props){\n  const [memo, setMemo] = usePersist(\"memo\", [])\n  const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n  const [message, setMessage] = useState('')\n  const [mode, setMode] = usePersist('mode', 'find')\n\n  const doChange = (e) =>{\n    setMessage(e.target.value)\n  }\n\n  const doAction = (e) => {\n    if (message == ''){\n      setMode('default')\n      return\n    }\n    let res = memo.filter((item, key) =>{\n      return item.message.includes(message)\n    })\n    setFMemo(res)\n    setMode('find')\n    setMessage('')\n  }\n\n  return(\n    <form onSubmit={doAction}>\n      <div className='form-group row'>\n        <input type=\"text\" onChange={doChange} value={message}\n               className='form-control-sm col' />\n        <input type=\"submit\" value=\"Find\" className='btn btn-primary btn-sm col-2' />\n      </div>\n    </form>\n  )\n}\n\nexport default FindForm\n"]},"metadata":{},"sourceType":"module"}