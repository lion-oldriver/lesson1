{"ast":null,"code":"var _jsxFileName = \"/Users/sasakireiou/Desktop/react_practice/src/components/TodoList.js\";\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  let {\n    todos,\n    onTodoClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, { ...todo,\n      onClick: () => onTodoClick(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TodoList;\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired\n};\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/sasakireiou/Desktop/react_practice/src/components/TodoList.js"],"names":["PropTypes","Todo","TodoList","todos","onTodoClick","map","todo","id","propTypes","arrayOf","shape","number","isRequired","text","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAAQC,IAAAA;AAAR,GAAD;AAAA,sBACf;AAAA,cACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD,OAEMA,IAFN;AAGE,MAAA,OAAO,EAAE,MAAMF,WAAW,CAACE,IAAI,CAACC,EAAN;AAH5B,OACOD,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,CAAjB;;KAAML,Q;AAYNA,QAAQ,CAACM,SAAT,GAAqB;AACnBL,EAAAA,KAAK,EAAEH,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACvCH,IAAAA,EAAE,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADkB;AAEvCC,IAAAA,IAAI,EAAEb,SAAS,CAACc,MAAV,CAAiBF;AAFgB,GAAhB,EAGtBA,UAHI,EAGQA;AAJI,CAArB;AAOA,eAAeV,QAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos,onTodoClick }) => (\n  <ul>\n    {todos.map((todo) =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => onTodoClick(todo.id)}\n      />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}