[{"/Users/sasakireiou/Desktop/react_practice/src/index.js":"1","/Users/sasakireiou/Desktop/react_practice/src/Rect.js":"2","/Users/sasakireiou/Desktop/react_practice/src/Persist.js":"3","/Users/sasakireiou/Desktop/react_practice/src/memo/MemoPage.js":"4","/Users/sasakireiou/Desktop/react_practice/src/memo/Memo.js":"5","/Users/sasakireiou/Desktop/react_practice/src/memo/AddForm.js":"6","/Users/sasakireiou/Desktop/react_practice/src/memo/Item.js":"7","/Users/sasakireiou/Desktop/react_practice/src/memo/DelForm.js":"8","/Users/sasakireiou/Desktop/react_practice/src/memo/FindForm.js":"9","/Users/sasakireiou/Desktop/react_practice/src/MemoApp.js":"10"},{"size":283,"mtime":1640836843664,"results":"11","hashOfConfig":"12"},{"size":658,"mtime":1640310561342,"results":"13","hashOfConfig":"12"},{"size":594,"mtime":1640418110884,"results":"14","hashOfConfig":"12"},{"size":488,"mtime":1640594655374,"results":"15","hashOfConfig":"12"},{"size":893,"mtime":1640597108396,"results":"16","hashOfConfig":"12"},{"size":798,"mtime":1640595725325,"results":"17","hashOfConfig":"12"},{"size":491,"mtime":1640597317074,"results":"18","hashOfConfig":"12"},{"size":881,"mtime":1640597289301,"results":"19","hashOfConfig":"12"},{"size":972,"mtime":1640596699740,"results":"20","hashOfConfig":"12"},{"size":312,"mtime":1640832978559,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6d5kq",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sasakireiou/Desktop/react_practice/src/index.js",[],"/Users/sasakireiou/Desktop/react_practice/src/Rect.js",[],"/Users/sasakireiou/Desktop/react_practice/src/Persist.js",["49"],"import React, { useState } from 'react'\n\nfunction usePersist(ky, initVal){\n  const key = \"hooks:\" + ky\n  const value = () => {\n    try{\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initVal\n    }catch(err){\n      console.log(err)\n      return initVal;\n    }\n  }\n  const setValue = (val) =>{\n    try{\n      setSavedValue(val)\n      window.localStorage.setItem(key, JSON.stringify(val))\n    }catch(err){\n      console.log(err)\n    }\n  }\n  const [savedValue, setSavedValue] = useState(value)\n  return [savedValue, setValue]\n}\n\nexport default usePersist","/Users/sasakireiou/Desktop/react_practice/src/memo/MemoPage.js",["50"],"import usePersist from '../Persist'\nimport Memo from './Memo';\nimport AddForm from './AddForm';\nimport FindForm from './FindForm';\nimport DelForm from './DelForm';\n\nfunction MemoPage(){\n  const [mode, setMode] = usePersist('mode', 'default')\n\n  return(\n    <div>\n      <h5 className='my-3'>mode: {mode}</h5>\n      <div className='alert alert-primary pb-0'>\n        <AddForm />\n        <FindForm />\n        <DelForm />\n      </div>\n      <Memo />\n    </div>\n  )\n}\n\nexport default MemoPage\n","/Users/sasakireiou/Desktop/react_practice/src/memo/Memo.js",["51","52","53","54"],"import React, { useState, useEffect } from 'react'\nimport usePersist from '../Persist'\nimport Item from './Item'\n\nfunction Memo(props){\n  const [memo, setMemo] = usePersist(\"memo\", [])\n  const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n  const [mode, setMode] = usePersist('mode', 'default')\n\n  let data = []\n\n  switch(mode){\n    case 'default':\n      data = memo.map((value, key) =>(\n        <Item key={value.message} value={value} index={key + 1} />\n      ))\n      setMode('deafult')\n      break\n    case 'find':\n      data = fmemo.map((value, key) =>(\n        <Item key={value.message} value={value} index={key + 1} />\n      ))\n      break\n    default:\n      data = memo.map((value, key) =>(\n        <Item key={value.message} value={value} index={key + 1} />\n      ))\n  }\n\n  return(\n    <table className='table mt-4'>\n      <tbody>{data}</tbody>\n    </table>\n  )\n}\n\nexport default Memo\n","/Users/sasakireiou/Desktop/react_practice/src/memo/AddForm.js",["55","56"],"import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\nfunction AddForm(props){\n  const [memo, setMemo] = usePersist(\"memo\", [])\n  const [message, setMessage] = useState('')\n\n  const doChange = (e) => {\n    setMessage(e.target.value)\n  }\n\n  const doAction = (e) => {\n    const data = {\n      message: message,\n      created: new Date()\n    }\n    memo.unshift(data)\n    setMemo(memo)\n    setMessage('')\n  }\n\n  return(\n    <form onSubmit={doAction} action=\"\">\n      <div className=\"form-group row\">\n        <input type=\"text\" className='form-control-sm col'\n               onChange={doChange} value={message} required />\n        <input type=\"submit\" value=\"Add\" className=\"btn btn-primary btn-sm col-2\" />\n      </div>\n    </form>\n  )\n}\n\nexport default AddForm\n","/Users/sasakireiou/Desktop/react_practice/src/memo/Item.js",["57","58"],"import React, { useState, useEffect} from 'react'\n\nfunction Item(props){\n  const th = {\n    width: \"100px\"\n  }\n  const td = {\n    textAlign: \"right\",\n    width: \"150px\"\n  }\n\n  let d = new Date(Date.parse(props.value.created))\n  let f = d.getMonth() + '/' + d.getDate() + ' '\n          + d.getHours() + ':' + d.getMinutes()\n\n  return(\n    <tr>\n      <th style={th}>No, {props.index}</th>\n      <td>{props.value.message}</td>\n      <td style={td}>{f}</td>\n    </tr>\n  )\n}\n\nexport default Item\n","/Users/sasakireiou/Desktop/react_practice/src/memo/DelForm.js",["59","60","61"],"import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\nfunction DelForm(props){\n  const [memo, setMemo] = usePersist(\"memo\", [])\n  const [num, setNum] = useState(0)\n\n  const doChange = (e) => {\n    setNum(e.target.value)\n  }\n\n  const doAction = (e) => {\n    let res = memo.filter((item, key) => {\n      return key != num\n    })\n    setMemo(res)\n    setNum(0)\n  }\n\n  let items = memo.map((value, key) => (\n    <option key={key} value={key}>\n      {value.message.substring(0, 10)}\n    </option>\n  ))\n\n  return(\n    <form onSubmit={doAction}>\n      <div className='form-group row'>\n        <select onChange={doChange} className='form-control-sm col' defaultValue=\"-1\">\n          {items}\n        </select>\n        <input type=\"submit\" value=\"Del\" className='btn btn-primary btn-sm col-2' />\n      </div>\n    </form>\n  )\n}\n\nexport default DelForm\n","/Users/sasakireiou/Desktop/react_practice/src/memo/FindForm.js",["62","63","64","65","66","67"],"import React, { useState, useEffect, memo } from 'react'\nimport usePersist from '../Persist'\n\nfunction FindForm(props){\n  const [memo, setMemo] = usePersist(\"memo\", [])\n  const [fmemo, setFMemo] = usePersist(\"findMemo\", [])\n  const [message, setMessage] = useState('')\n  const [mode, setMode] = usePersist('mode', 'find')\n\n  const doChange = (e) =>{\n    setMessage(e.target.value)\n  }\n\n  const doAction = (e) => {\n    if (message == ''){\n      setMode('default')\n      return\n    }\n    let res = memo.filter((item, key) =>{\n      return item.message.includes(message)\n    })\n    setFMemo(res)\n    setMode('find')\n    setMessage('')\n  }\n\n  return(\n    <form onSubmit={doAction}>\n      <div className='form-group row'>\n        <input type=\"text\" onChange={doChange} value={message}\n               className='form-control-sm col' />\n        <input type=\"submit\" value=\"Find\" className='btn btn-primary btn-sm col-2' />\n      </div>\n    </form>\n  )\n}\n\nexport default FindForm\n","/Users/sasakireiou/Desktop/react_practice/src/MemoApp.js",[],{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":8,"column":16,"nodeType":"70","messageId":"71","endLine":8,"endColumn":23},{"ruleId":"68","severity":1,"message":"73","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"74","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"75","line":6,"column":16,"nodeType":"70","messageId":"71","endLine":6,"endColumn":23},{"ruleId":"68","severity":1,"message":"76","line":7,"column":17,"nodeType":"70","messageId":"71","endLine":7,"endColumn":25},{"ruleId":"68","severity":1,"message":"74","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"77","line":1,"column":38,"nodeType":"70","messageId":"71","endLine":1,"endColumn":42},{"ruleId":"68","severity":1,"message":"73","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"74","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"74","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"77","line":1,"column":38,"nodeType":"70","messageId":"71","endLine":1,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":14,"column":18,"nodeType":"80","messageId":"81","endLine":14,"endColumn":20},{"ruleId":"68","severity":1,"message":"74","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"77","line":1,"column":38,"nodeType":"70","messageId":"71","endLine":1,"endColumn":42},{"ruleId":"68","severity":1,"message":"75","line":5,"column":16,"nodeType":"70","messageId":"71","endLine":5,"endColumn":23},{"ruleId":"68","severity":1,"message":"82","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":15},{"ruleId":"68","severity":1,"message":"83","line":8,"column":10,"nodeType":"70","messageId":"71","endLine":8,"endColumn":14},{"ruleId":"78","severity":1,"message":"84","line":15,"column":17,"nodeType":"80","messageId":"81","endLine":15,"endColumn":19},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'setMode' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setMemo' is assigned a value but never used.","'setFMemo' is assigned a value but never used.","'memo' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'fmemo' is assigned a value but never used.","'mode' is assigned a value but never used.","Expected '===' and instead saw '=='."]