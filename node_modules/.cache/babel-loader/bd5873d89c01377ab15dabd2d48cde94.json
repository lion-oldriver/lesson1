{"ast":null,"code":"const todo = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false\n      };\n\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        completed: !state.completed\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, todo(undefined, action)];\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/sasakireiou/Desktop/react_practice/src/reducers/todos.js"],"names":["todo","state","action","type","id","text","completed","Object","assign","todos","undefined"],"mappings":"AAAA,MAAMA,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AACLC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADN;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK,aAAL;AACE,UAAIL,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAxB,EAA2B;AACzB,eAAOH,KAAP;AACD;;AACD,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC9BK,QAAAA,SAAS,EAAE,CAACL,KAAK,CAACK;AADY,OAAzB,CAAP;;AAGF;AACE,aAAOL,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,MAAMQ,KAAK,GAAG,YAAwB;AAAA,MAAvBR,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGF,KADE,EAELD,IAAI,CAACU,SAAD,EAAYR,MAAZ,CAFC,CAAP;;AAIF;AACE,aAAOD,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeQ,KAAf","sourcesContent":["const todo = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id){\n        return state\n      }\n      return Object.assign({}, state, {\n        completed: !state.completed\n      })\n    default:\n      return state\n  }\n}\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        todo(undefined, action)\n      ]\n    default:\n      return state\n  }\n}\n\nexport default todos\n"]},"metadata":{},"sourceType":"module"}