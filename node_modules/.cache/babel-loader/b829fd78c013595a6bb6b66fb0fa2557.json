{"ast":null,"code":"var _jsxFileName = \"/Users/sasakireiou/Desktop/react_practice/src/containers/AddTodo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet AddTodo = _ref => {\n  let {\n    dispatch\n  } = _ref;\n  let input;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: value => {\n        input = value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(addTodo(input.value));\n        input.value = '';\n      },\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddTodo;\nAddTodo = connect()(AddTodo);\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/sasakireiou/Desktop/react_practice/src/containers/AddTodo.js"],"names":["React","connect","addTodo","AddTodo","dispatch","input","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,YAAtB;;;AAEA,IAAIC,OAAO,GAAG,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC5B,MAAIC,KAAJ;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,GAAG,EAAGC,KAAD,IAAW;AACrBD,QAAAA,KAAK,GAAGC,KAAR;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBF,QAAAA,QAAQ,CAACF,OAAO,CAACG,KAAK,CAACC,KAAP,CAAR,CAAR;AACAD,QAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACD,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBD;;KAAIH,O;AAkBJA,OAAO,GAAGF,OAAO,GAAGE,OAAH,CAAjB;AAEA,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {addTodo} from '../actions'\n\nlet AddTodo = ({dispatch}) => {\n  let input\n\n  return (\n    <div>\n      <input ref={(value) => {\n        input = value\n      }} />\n      <button onClick={() => {\n        dispatch(addTodo(input.value))\n        input.value = ''\n      }}>\n        Add Todo\n      </button>\n    </div>\n  )\n}\n\nAddTodo = connect()(AddTodo)\n\nexport default AddTodo\n"]},"metadata":{},"sourceType":"module"}