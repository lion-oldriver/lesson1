{"ast":null,"code":"var _jsxFileName = \"/Users/sasakireiou/Desktop/react_practice/src/memo/Memo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport usePersist from '../Persist';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MemoPage(props) {\n  _s();\n\n  const [memo, setMemo] = usePersist('memo', []);\n  const [fmemo, setFMemo] = usePersist('findMemo', []);\n  const [mode, setMode] = usePersist('mode', 'default');\n  let data = [];\n\n  switch (mode) {\n    case 'default':\n      data = memo.map((value, key) => /*#__PURE__*/_jsxDEV(Item, {\n        value: value,\n        index: key + 1\n      }, value.message, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this));\n      setMode('default');\n      break;\n\n    case 'find':\n      data = fmemo.map((value, key) => /*#__PURE__*/_jsxDEV(Item, {\n        value: value,\n        index: key + 1\n      }, value.message, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this));\n      break;\n\n    default:\n      data = memo.map((value, key) => /*#__PURE__*/_jsxDEV(Item, {\n        value: value,\n        index: key + 1\n      }, value.message, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MemoPage, \"OizUfkB5is6zTWx7ybSi3rdv/Dk=\", false, function () {\n  return [usePersist, usePersist, usePersist];\n});\n\n_c = MemoPage;\nexport default Memo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoPage\");","map":{"version":3,"sources":["/Users/sasakireiou/Desktop/react_practice/src/memo/Memo.js"],"names":["React","useState","useEffect","useReducer","usePersist","Item","MemoPage","props","memo","setMemo","fmemo","setFMemo","mode","setMode","data","map","value","key","message","Memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,UAAU,CAAC,MAAD,EAAS,EAAT,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAAC,UAAD,EAAa,EAAb,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,UAAU,CAAC,MAAD,EAAS,SAAT,CAAlC;AAEA,MAAIU,IAAI,GAAG,EAAX;;AAEA,UAAOF,IAAP;AACE,SAAK,SAAL;AACEE,MAAAA,IAAI,GAAGN,IAAI,CAACO,GAAL,CAAS,CAACC,KAAD,EAAQC,GAAR,kBACd,QAAC,IAAD;AAA4B,QAAA,KAAK,EAAID,KAArC;AAA4C,QAAA,KAAK,EAAIC,GAAG,GAAG;AAA3D,SAAaD,KAAK,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA,cADK,CAAP;AAGAL,MAAAA,OAAO,CAAC,SAAD,CAAP;AACA;;AACF,SAAK,MAAL;AACEC,MAAAA,IAAI,GAAGJ,KAAK,CAACK,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,kBACf,QAAC,IAAD;AAA4B,QAAA,KAAK,EAAID,KAArC;AAA4C,QAAA,KAAK,EAAIC,GAAG,GAAG;AAA3D,SAAaD,KAAK,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA,cADK,CAAP;AAGA;;AACF;AACEJ,MAAAA,IAAI,GAAGN,IAAI,CAACO,GAAL,CAAS,CAACC,KAAD,EAAQC,GAAR,kBACd,QAAC,IAAD;AAA4B,QAAA,KAAK,EAAID,KAArC;AAA4C,QAAA,KAAK,EAAIC,GAAG,GAAG;AAA3D,SAAaD,KAAK,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA,cADK,CAAP;AAbJ;;AAkBA,sBACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA,2BACE;AAAA,gBAAQJ;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA9BQR,Q;UACiBF,U,EACEA,U,EACFA,U;;;KAHjBE,Q;AAgCT,eAAea,IAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react'\nimport usePersist from '../Persist'\nimport Item from './Item'\n\nfunction MemoPage(props){\n  const [memo, setMemo] = usePersist('memo', [])\n  const [fmemo, setFMemo] = usePersist('findMemo', [])\n  const [mode, setMode] = usePersist('mode', 'default')\n\n  let data = []\n\n  switch(mode){\n    case 'default':\n      data = memo.map((value, key) =>(\n        <Item key = {value.message} value = {value} index = {key + 1} />\n      ))\n      setMode('default')\n      break\n    case 'find':\n      data = fmemo.map((value, key) =>(\n        <Item key = {value.message} value = {value} index = {key + 1} />\n      ))\n      break\n    default:\n      data = memo.map((value, key) =>(\n        <Item key = {value.message} value = {value} index = {key + 1} />\n      ))\n  }\n\n  return(\n    <table className='table mt-4'>\n      <tbody>{data}</tbody>\n    </table>\n  )\n}\n\nexport default Memo\n"]},"metadata":{},"sourceType":"module"}